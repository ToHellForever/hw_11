"""
ДЗ №11: Часть 1: Создание декоратора для проверки сложности пароля и функции регистрации пользователей.

Библиотеки:
- typing
Из библиотеки typing импортируем: Callable, List для корректного отображения типов и работы кода

Для проверки пароля используется цикл for и функция any(), точнее not any(), в результате которой, если во время проверки хотя бы один элемент не соответсвует условию 
"""
from typing import Callable, List
import mypy
# Список специальных символов
spec_symbols: List[str] = ['!', '@', '#', '`', '%', '^', '&', '*', '(', ')', '_', '+', '-', '=', '<', '>', '?', '/', '|', '.', ':', ';', '[', ']', '{', '}', '"']


def password_checker(func: Callable[[str], None]) -> Callable[[str], None]: # Функция декоратора
    """Декоратор для проверки сложности пароля."""
    def wrapper(password: str) -> None:  
        """Функция-обёртка для проверки пароля."""
        # Проверка на длину пароля
        if len(password) < 8:
            raise ValueError('Пароль должен содержать не менее 8 символов')
        # Проверка на наличие хотя бы одной цифры
        if not any(char.isdigit() for char in password):
            raise ValueError('Пароль должен содержать хотя бы одну цифру')
        # Проверка на наличие хотя бы одной заглавной буквы
        if not any(char.isupper() for char in password):
            raise ValueError('Пароль должен содержать хотя бы одну заглавную букву')
        # Проверка на наличие хотя бы одной строчной буквы
        if not any(char.islower() for char in password):
            raise ValueError('Пароль должен содержать хотя бы одну строчную букву')
        # Проверка на наличие хотя бы одного спец символа
        if not any(char in spec_symbols for char in password):
            raise ValueError('Пароль должен содержать хотя бы один специальный символ')

        func(password)  # Вызов оригинальной функции, только если все проверки пройдены

    return wrapper


@password_checker
def register_user(password: str) -> None:  
    """Функция для регистрации пользователя."""
    print('Пароль успешно зарегистрирован')

# проверка, запрос пароля у пользователя
password: str = input('Введите пароль для первого задания: ')
register_user(password)


